"""Add color_id to ProductImage table

Revision ID: 92c647e74d56
Revises: 58747ebbc770
Create Date: 2025-08-27 13:08:22.305443

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '92c647e74d56'
down_revision = '58747ebbc770'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product_image', schema=None) as batch_op:
        # Step 1: Add the column as nullable first to avoid errors on existing rows.
        batch_op.add_column(sa.Column('color_id', sa.Integer(), nullable=True))

    # Step 2: Populate the new column with a default value for all existing rows.
    # IMPORTANT: Replace '1' with a valid color_id that exists in your 'color' table.
    op.execute("UPDATE product_image SET color_id = 1 WHERE color_id IS NULL")

    with op.batch_alter_table('product_image', schema=None) as batch_op:
        # Step 3: Now that all rows have a value, you can enforce the NOT NULL constraint.
        batch_op.alter_column('color_id', nullable=False)
        batch_op.create_foreign_key(None, 'color', ['color_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product_image', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('color_id')

    # ### end Alembic commands ###
